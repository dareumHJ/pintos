Kernel command line: -q -f put rox-multichild put child-rox run rox-multichild
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  157,081,600 loops/s.
hd0:0: detected 321 sector (160 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 220 sector (110 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'rox-multichild' into the file system...
Putting 'child-rox' into the file system...
Executing 'rox-multichild':
(rox-multichild) begin
(rox-multichild) open "child-rox"
(rox-multichild) read "child-rox"
Page fault at 0x423d040: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at rip=800421ecff
 cr2=000000000423d040 error=               0
rax 000000000423d038 rbx 0000000000000000 rcx 000000004747ff70 rdx 0000000000000010
rsp 0000008004241e90 rbp 0000008004241ec0 rsi 000000004747ff70 rdi 000000000423d038
rip 000000800421ecff r8 0000000000000000  r9 0000000000000000 r10 0000000000000000
r11 0000000000000202 r12 000000800421d269 r13 000080042094ee00 r14 00008004241f2000
r15 0000200000000200 rflags 00000206
es: 001b ds: 001b cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x800421857f 0x800421ce49 0x800421cfc8 0x80042093b4 0x80042097d2 0x800421d6f4 0x800421d3a3 0x800421d03d 0x40018b 0x4003c5 0x400e66.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 294 ticks
Thread: 36 idle ticks, 257 kernel ticks, 1 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 112 reads, 478 writes
hd1:0: 220 reads, 0 writes
Console: 1912 characters output
Key